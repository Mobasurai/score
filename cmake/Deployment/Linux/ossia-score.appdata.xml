<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop-application">
  <id>io.ossia.score</id>
  <metadata_license>CC-BY-SA-4.0</metadata_license>
  <project_license>GPL-3.0</project_license>
  <name>ossia score</name>
  <summary>Sequencer for media artists</summary>
  <developer id="io.github.ossia">
    <name>ossia.io</name>
  </developer>
  <branding>
    <color type="primary" scheme_preference="light">#e9f0f1</color>
    <color type="primary" scheme_preference="dark">#1f1f20</color>
  </branding>
  <description>
    <p>ossia score is a sequencer for audio-visual artists, designed to enable the creation of interactive shows, museum installations, intermedia digital artworks, interactive music and more in an intuitive user interface.</p>
    
    <ul>
      <li>Sequence OSC, MIDI, DMX, sound, video and more, between multiple software and hardware. </li>
      <li>Script and live-code with JavaScript, ISF Shaders, Faust, PureData or C++.</li>
      <li>Leverage IoT protocols such as CoAP or MQTT for industrial-grade automation.</li>
      <li>Interact with joysticks, Wiimotes, Leapmotions, Web APIs and BLE sensors.</li>
      <li>Integrate programs from a wealth of creative programming languages such as Structure Synth, Context-Free Art and Bytebeat.</li>
      <li>Load any kind of audio or video format and process visuals through Spout, Syphon, NDI, Shmdata or Sh4lt.</li>
    </ul>
  </description>
  <launchable type="desktop-id">io.ossia.score.desktop</launchable>
  <content_rating type="oars-1.1" />
  <url type="bugtracker">https://github.com/ossia/score/issues</url>
  <url type="contact">https://discord.gg/8Hzm4UduaS</url>
  <url type="contribute">https://ossia.io/project.html</url>
  <url type="donation">https://opencollective.com/ossia</url>
  <url type="help">https://ossia.io/docs.html</url>
  <url type="homepage">https://ossia.io</url>
  <url type="vcs-browser">https://github.com/ossia/score</url>
  <screenshots>
    <screenshot type="default" xml:lang="en">
      <image>https://github.com/ossia/score/raw/master/docs/score.png?raw=true</image>
      <caption>Sequence all kinds of media in ossia score</caption>
    </screenshot>
  </screenshots>
  <releases>
    <release version="3.3.2" date="2024-11-17">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.3.2</url>
      <description>
        <p>ossia score 3.3.2 is a minor hotfix release.</p>
        <p>New features</p>
        <ul>
          <li>Support for automatic detection of BT.601, BT.709 and Rec2020 colorspaces in videos. Rec2020 is currently downscaled to SDR until we support a proper HDR video pipeline.</li>
          <li>Signal Display will now display constant values as middle-centered dots</li>
          <li>Devices: raw evdev input access on Linux to enable reading any kind of global keyboard / tablet / mouse / ACPI event</li>
        </ul>
        <p>Bugfixes</p>
        <ul>
          <li>Audio: fix that audio analysis nodes would crash if using a non-power-of-two sample rate.</li>
          <li>Audio: improve nomenclature for audio channel extractor.</li>
          <li>Merger: fix missing combobox items.</li>
          <li>Geometry filter: fix default filter which wasn't valid json</li>
          <li>Geometry filter: add a validation step</li>
          <li>Shmdata / Sh4lt: fix support of YUY2 video</li>
          <li>LV2: prevent plug-ins with atom ports to crash.</li>
          <li>MIDI: fix support for computer keyboard on non-X11 platforms.</li>
        </ul>
      </description>
    </release>
    <release version="3.3.1" date="2024-11-15">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.3.1</url>
      <description>
        <p>ossia score 3.3.1 is a minor hotfix release.</p>
        <p>New features</p>
        <ul>
          <li>LED View process to display [r,g,b,r,g,b,...] triplets</li>
          <li>Signal Display will now display multi-dimensional arrays in addition of single values</li>
        </ul>
        <p>Bugfixes</p>
        <ul>
          <li>Build: fix warnings coming from 3rdparty libraries</li>
          <li>CI: multiple fixes</li>
          <li>UI: do not center widgets in vertical layouts</li>
          <li>UI: fix precision issue with xy / xyz spinboxes and large ranges</li>
          <li>Signal Display: fix that it was stuck</li>
          <li>Core: be more lenient with processes that have dynamic ports</li>
          <li>Core: fix that a QThread was deleted after QCoreApplication leading to a macOS crash</li>
        </ul>
      </description>
    </release>
    <release version="3.3.0" date="2024-11-12">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.3.0</url>
      <description>
        <p>ossia score 3.3.0 is a major release featuring a host of new capabilities.</p>
        <p>New features</p>
        <ul>
          <li>Audio: Add an audio channel selector object</li>
          <li>Audio: mono merging mode in Merger object</li>
          <li>Automation: Make prettyName more descriptive</li>
          <li>Avnd: initial support for objects defined as C++20 modules</li>
          <li>Avnd: support for automatic reflection of enumeration names through magic_enum, removing the need for some macros</li>
          <li>Avnd: support for CV-like data processing object with a very simple API</li>
          <li>Avnd: support for loading data files in GPU nodes</li>
          <li>Avnd: support making objects with dynamic port counts more easily</li>
          <li>CI: Migrated continuous builds to GH actions</li>
          <li>Core: Use snmalloc as default allocator</li>
          <li>Data processing: HDF5 explorer processses, which allow to expose HDF5 data as either a 1D dimension or a texture.</li>
          <li>Data processing: initial work towards importing of CSV and HDF5 files as curves by drag-and-drop.</li>
          <li>Devices: initial work in allowing devices to specify the resources they are using such as ports, etc. in a more structured way.</li>
          <li>Devices: Move the Device QML object implementation from score to libossia ; add Device.read/write to HTTP device</li>
          <li>Devices: support for direct NeoPixel LED control over SPI.</li>
          <li>Devices: support for the Sh4lt protocol which supersedes Shmdata. Thanks @nbouillot!</li>
          <li>Graphics: Add support for GPU decoding of RGB24 and BGR24 textures, useful for Qt Animation qtrle files</li>
          <li>Graphics: Efficient geometry filtering pipeline. Introduction of a Geometry Filter object which is able to inject transformations in the vertex shader stage and support for geometry processing relationships in the graphics thread.</li>
          <li>Graphics: Sprite Reader object for all your retro-gaming needs</li>
          <li>Graphics: Support for loading point clouds</li>
          <li>JS: Add utility functions to convert between types</li>
          <li>Mappings: Add a ArrayGen object to generate arrays easily</li>
          <li>Mappings: add Combine and Spread objects to enable simpler processing and recombination of values into arrays</li>
          <li>Mappings: add initial gesture detection support through the Puara Gestures library</li>
          <li>Mappings: Mapping Tool object with a lot of feature for mapping data such as deadzone detection, re-scaling, etc.</li>
          <li>Math: Fix live editing of expression in arraygen / arraymap</li>
          <li>MIDI: initial support for computer keyboard input</li>
          <li>MIDI: Virtual ports will now be scanned</li>
          <li>OSC: add support for the SpatGRIS OSC API directly through a new device</li>
          <li>OSC: allow to expose a local OSC device as a TCP server</li>
          <li>OSC: allow to expose a local OSC device over an OSCQuery port</li>
          <li>OSCQuery: handle buggy HTTP implementations that do not properly close connection</li>
          <li>OSCQuery: implement dense mode which packs values according to an OSCQuery spec, especially useful for resource-constrained devices</li>
          <li>Pipewire Respect PIPEWIRE_LATENCY environment variable</li>
          <li>Platforms: add CI script based on native packages for Debian Trixie</li>
          <li>Platforms: prevent the Intel version to run on AppleSilicon Macs as it is thoroughly incompatible</li>
          <li>Platforms: support for building in C++23 mode</li>
          <li>Platforms: support for macOS 15 and Xcode 16, clang-18, clang-19, Fedora 41</li>
          <li>PureData / libpd: revert to a version with working audio</li>
          <li>UI: Add icon for upcoming AI-based processes. Thanks @aklevy!</li>
          <li>UI: Add support for slowing down slider changes with CTRL / Command</li>
          <li>UI: implement reset-to-default-value-on-double-click on most central view UI controls</li>
          <li>UI: make the middle column resizeable in the Device dialog. Thanks @samamou!</li>
          <li>UI: tighter UI style</li>
          <li>VST3: Support for VST3 on AArch64 platforms</li>
        </ul>
        <p>Improvements and bug fixes</p>

        <ul>
          <li>Audio: Fix saving / loading of propagate attribute</li>
          <li>Audio: many fixes to quantification.</li>
          <li>Audio: Various fixes for VST and LV2</li>
          <li>Automation: Fix that changing the address would reset the scale if it was a pattern</li>
          <li>Avnd: dynamic ports improvements</li>
          <li>Avnd: support for texture sizes in CPU texture filters</li>
          <li>BLE: Fix support on Win32 and Flatpak</li>
          <li>Core: Be more lenient when reloading if a cable isn't present in a save file due to dynamic operations</li>
          <li>Core: finish porting all the plug-ins written in the previous "Fx" API to Avendish which is now the one and only officially supported API for making ossia add-ons.</li>
          <li>Curve rendering: optimizations when we have more than a thousand points.</li>
          <li>Devices: Add a more optimized device_parameter implementation when we know the type beforehand</li>
          <li>Devices: DNSSD: force every execution to execute over the same thread as Avahi is not thread-safe nor reentrant</li>
          <li>Devices: Do not try to infer the min / max if things are patterns</li>
          <li>Execution: domain and range improvements, allow value ports with ranges, fix LFO output range</li>
          <li>Graphics: Fix missing Spout I/O on Windows</li>
          <li>Graphics: fix that shmdata input do not reconnect when writer quits</li>
          <li>Graphics: improve the amount of recomputations needed for geometry updates</li>
          <li>Images: fix render shader which had broken</li>
          <li>Items: Send signals to release mouse if a graphics item is deleted while being grabbed</li>
          <li>JS: thread safety fixes and improvements</li>
          <li>MIDI: fix some note-off cases that were not handled.</li>
          <li>MIDI: Use the proper app name in MIDI APIs</li>
          <li>Platform: Improve support of QT_QPA_PLATFORM=minimal</li>
          <li>Raw I/O: improve PWM support</li>
          <li>Scenario: creating a state by double-click will now automatically make it auto-started</li>
          <li>Spline: Update and fix small bugs in tinyspline library</li>
          <li>UI: Add documentation links to most processes and devices. The process inspector and device dialog now have direct links to the relevant help pages.</li>
          <li>UI: Be more permissive with looping slot issues</li>
          <li>UI: fix connected port look in hi-dpi mode</li>
          <li>UI: fix the ugly ampersand that appeared some Qt versions ago.</li>
          <li>UI: Fix UI not resizing when a port is added to a node</li>
          <li>UI: LineEdit: improve relayout in nodes</li>
          <li>UI: make sure that controls always show up no matter what in the inspector panel</li>
          <li>UI: port UI improvements in inspector ; show more port names and always show port list.</li>
          <li>UI: respect Alt-key magnetism behaviour when dropping a state.</li>
          <li>UI: Update scene when node size changes to prevent background artefacts</li>
          <li>UI: use double-precision for storing slider data as it caused visible precision issues with large ranges</li>
          <li>VST / VST3: Disable GUI when running under wayland as plug-ins will crash</li>
          <li>VST and friends:  Use the actual processed samples as timing information instead of a computation depending on speed</li>
          <li>YSFX: cmake improvements</li>
          <li>Many, many other bugfixes and code improvements...</li>
        </ul>
      </description>
    </release>
    <release version="3.2.4" date="2024-07-08">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.2.4</url>
      <description>
        <p>ossia score 3.2.4 is a bugfix release which enables FreeBSD support.</p>
        <ul>
          <li>Various fixes for VST and LV2</li>
        </ul>
      </description>
    </release>
    <release version="3.2.3" date="2024-07-02">
      <url type="details">https://github.com/ossia/score/releases/tag/v3.2.3</url>
      <description>
        <p>ossia score 3.2.3 is a bugfix release which enables Flatpak support.</p>
        <ul>
          <li>Update dependencies to be flatpak-compatible</li>
          <li>A bugfix to Nix support</li>
        </ul>
      </description>
    </release>
  </releases>
</component>
